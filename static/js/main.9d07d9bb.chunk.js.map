{"version":3,"sources":["Images/avengers-infinity-war.jpg","Images/fauzan-saari-crn276hbbYU-unsplash.jpg","Images/wp2066450-the-loud-house-wallpapers.jpg","components/Avengercards/index.js","components/Wrapper/index.js","components/Navbar/index.js","Pages/Avengers.js","components/SoccerCards/index.js","Pages/Soccers.js","components/Title/index.js","components/GameCards/index.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Avengercards","props","react_default","a","createElement","className","alt","name","src","image","onClick","chosenImage","id","Wrapper","children","Navbar","maxScore","avengers","length","Avenger","state","Score","Highscore","chosenImages","gameAlerts","_this","includes","setState","resetGame","HighScore","gameMsg","selected","push","shuffleImages","shuffledImages","shuffleArray","i","j","Math","floor","random","_ref","_this2","this","components_Navbar","components_Wrapper","map","avenger","components_Avengercards","key","Component","SoccerCards","soccers","soccer","soccer1s","components_SoccerCards","Title","GameCards","react_router_dom","Row","Col","lg","Card","width","require","Button","to","Home","components_Title","components_GameCards","App","react_router","exact","path","component","Avengers","LoudHouse","Soccers","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d07d9bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avengers-infinity-war.e843fd90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fauzan-saari-crn276hbbYU-unsplash.9d8452ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wp2066450-the-loud-house-wallpapers.68272df4.jpg\";","import React from \"react\";\n\n\nfunction Avengercards(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} \n        onClick={() =>props.chosenImage(props.id)}></img>\n      </div>\n      \n     \n    </div>\n  );\n}\n\nexport default Avengercards;","import React from \"react\";\n\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\n\n\nfunction Navbar(props) {\n    return (\n      <div className=\"navbar\">\n        <div className=\"start\">\n          <strong>Click image to start!</strong> If you can selected all images without repeating, then you win!\n          \n           \n        \n        </div>\n        <div className=\"score\">{props.children}</div>\n      </div>\n    );\n  }\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport Avengercards from \"../components/Avengercards\";\nimport Wrapper from \"../components/Wrapper\";\nimport Navbar from \"../components/Navbar\";\nimport avengers from \"../Cards/avenger\"\n\nconst maxScore = avengers.length\n\nclass Avenger extends Component {\n  // array\n  state = {\n    avengers,\n    Score: 0,\n    Highscore: 0,\n    chosenImages: [],\n    gameAlerts: \"\"\n  };\n\n  // clicking images\n   chosenImage = id => {\n    \n    if (this.state.chosenImages.includes(id)) {\n      this.setState({gameAlerts:\"Sorry you loose..!\"})\n      this.resetGame()\n    }\n \n    else {\n   \n  const Score = this.state.Score + 1\n\n    // highScore \n    if (Score > this.state.Highscore) {\n      this.setState({HighScore:Score})\n    }\n    if (Score === maxScore) {\n      this.setState({gameMsg: \"Great you found them all!\"})\n      this.resetGame()\n    }\n    //  image id and shuffle\n    else {\n     \n      this.setState({selected:this.state.chosenImages.push(id)})\n      this.setState({Score:Score})\n      this.shuffleImages()\n    };\n  }\n}\n\n// Re start game\nresetGame = () => {\n  this.setState({Score:0})\n  this.setState({chosenImages:[]})\n  this.shuffleImages()\n}\n//  shuffle\nshuffleImages = () => {\n  const shuffledImages = this.shuffleArray(avengers)\n  this.setState({avengers:shuffledImages})\n}\n\n// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array (use this code as reference for shuffleling an)\nshuffleArray = (a) => {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nrender() {\n    return (\n      \n      \n        <div>\n        \n         <Navbar> \n         <div className=\"menu\">\n           <ul>\n            <li>{this.state.gameAlerts}</li>\n          \n            \n            <li>Score = {this.state.Score}</li>\n          \n            \n           <li> HighScore = {this.state.HighScore}</li>\n           \n           </ul>\n           </div>\n         </Navbar>\n         <Wrapper>\n        {this.state.avengers.map(avenger => (\n          <Avengercards\n           // handleClick={this.handleClick}\n            id={avenger.id}\n            key={avenger.id}\n            image={avenger.image}\n            chosenImage={this.chosenImage}\n          /> \n          \n        ))}\n         </Wrapper>\n         </div>\n       \n    \n     \n    );\n  }\n}\n\nexport default Avenger;\n","import React from \"react\";\n\n\nfunction SoccerCards(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} \n        onClick={() =>props.chosenImage(props.id)}></img>\n      </div>\n      \n     \n    </div>\n  );\n}\n\nexport default SoccerCards;","import React, { Component } from \"react\";\nimport SoccerCards from \"../components/SoccerCards\";\nimport Wrapper from \"../components/Wrapper\";\nimport Navbar from \"../components/Navbar\";\nimport soccers from \"../Cards/soccer\"\n\nconst maxScore = soccers.length\n\nclass soccer extends Component {\n  // array\n  state = {\n    soccers,\n    Score: 0,\n    Highscore: 0,\n    chosenImages: [],\n    gameAlerts: \"\"\n  };\n\n  // clicking images\n   chosenImage = id => {\n    \n    if (this.state.chosenImages.includes(id)) {\n      this.setState({gameAlerts:\"Sorry you loose..!\"})\n      this.resetGame()\n    }\n \n    else {\n   \n  const Score = this.state.Score + 1\n\n    // highScore \n    if (Score > this.state.Highscore) {\n      this.setState({HighScore:Score})\n    }\n    if (Score === maxScore) {\n      this.setState({gameMsg: \"Great you found them all!\"})\n      this.resetGame()\n    }\n    //  image id and shuffle\n    else {\n     \n      this.setState({selected:this.state.chosenImages.push(id)})\n      this.setState({Score:Score})\n      this.shuffleImages()\n    };\n  }\n}\n\n// Re start game\nresetGame = () => {\n  this.setState({Score:0})\n  this.setState({chosenImages:[]})\n  this.shuffleImages()\n}\n//  shuffle\nshuffleImages = () => {\n  const shuffledImages = this.shuffleArray(soccers)\n  this.setState({soccer1s:shuffledImages})\n}\n\n// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array (use this code as reference for shuffleling an)\nshuffleArray = (a) => {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nrender() {\n    return (\n      \n      \n        <div>\n        \n         <Navbar> \n         <div className=\"menu\">\n           <ul>\n            <li>{this.state.gameAlerts}</li>\n          \n            \n            <li>Score = {this.state.Score}</li>\n          \n            \n           <li> HighScore = {this.state.HighScore}</li>\n           \n           </ul>\n           </div>\n         </Navbar>\n         <Wrapper>\n        {this.state.soccers.map(soccer => (\n          <SoccerCards\n           // handleClick={this.handleClick}\n            id={soccer.id}\n            key={soccer.id}\n            image={soccer.image}\n            chosenImage={this.chosenImage}\n          /> \n         \n        ))}\n          </Wrapper>\n         </div>\n       \n    \n     \n    );\n  }\n}\n\nexport default soccer;","import React from \"react\";\n\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;","import React from \"react\";\nimport { BrowserRouter as  Router } from \"react-router-dom\";\nimport {Link} from \"react-router-dom\";\nimport { Card, Button, Col, Row } from 'reactstrap'\n\n  const GameCards= (props) => {\n      return (\n\n        <Router>\n<div>\n<Row>\n      <Col lg=\"3\">\n      \n      <Card>\n        \n          <img width=\"100%\"  src={require(\"../../Images/avengers-infinity-war.jpg\")} alt=\"\" />   \n    \n          <Button><Link to=\"/avengers\">Play Avengers</Link></Button>\n        \n      </Card>\n     </Col>\n\n     <Col lg=\"3\">\n      \n      <Card>\n        \n          <img width=\"100%\"  src={require(\"../../Images/fauzan-saari-crn276hbbYU-unsplash.jpg\")} alt=\"\" />   \n    \n          <Button><Link to=\"/soccers\">Play Soccer</Link></Button>\n        \n      </Card>\n     </Col>\n\n     <Col lg=\"3\">\n      \n      <Card>\n        \n          <img width=\"100%\"  src={require(\"../../Images/wp2066450-the-loud-house-wallpapers.jpg\")} alt=\"\" />   \n    \n          <Button><Link to=\"/avengers\">Play LoudHouse</Link></Button>\n        \n      </Card>\n     </Col>\n\n     <Col lg=\"3\">\n      \n      <Card>\n        \n          <img width=\"100%\"  src={require(\"../../Images/avengers-infinity-war.jpg\")} alt=\"\" />   \n    \n          <Button><Link to=\"/avengers\">Play </Link></Button>\n        \n      </Card>\n     </Col>\n\n    \n       </Row>\n       </div>\n       </Router>\n      );\n      }\n     \n\n    export default GameCards;","import React, { Component } from \"react\";\nimport Title from \"../components/Title\";\nimport GameCards from \"../components/GameCards\"\n\n\n\n\n\n  // Map  component for each object\n  class Home extends Component{\n  render() {\n    return (\n      \n       \n        <div>\n        <Title>Memory Game</Title>\n        <GameCards></GameCards>\n      \n      </div> \n     \n    );\n  }\n}\n\n\nexport default Home;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route,  } from \"react-router-dom\";\nimport Avengers from \"./Pages/Avengers\";\nimport LoudHouse from \"./Pages/LoudHouse\";\nimport Soccers from \"./Pages/Soccers\";\nimport Home from \"./Pages/Home\"\n\n\n\n\n\n\n  // Map  component for each object\n  class App extends Component{\n  render() {\n    return (\n      \n       <Router>\n        <div>\n      \n        \n      \n       <Switch>\n         <Route exact path=\"/\" component={Home}/>\n         <Route exact path=\"/avengers\" component={Avengers}/>\n         <Route exact path=\"/loudhouse\" component={LoudHouse}/>\n          <Route   exact path=\"/soccers\" component={Soccers} />\n       </Switch>\n       </div>\n       \n      </Router>\n    \n     \n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}